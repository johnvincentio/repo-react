
%expandableButton {
	width: 100%;
	height: 100%;
	border-radius: 50%;
	border: none transparent;
	outline: none;
	@include center;
	@include transition(all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55));
}

%expandableButton-item {
	border-radius: 50%;
	border: none transparent;
	outline: none;
	@include center;
	@include transition(all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55));
	width: 75%;
	height: 75%;
	background-color: palette(expandable-button, sub-button);
	i {
		color: palette(expandable-button, sub-button-text-color);
		font-size: 3vh;
		@include center;
	}
}

.expandableButton {
	width: 12vh;
	height: 12vh;

	position: absolute;
	bottom: 0%;
	right: 0%;
	@include transform(translate(-100%, -100%));

	.expandButton {
		@extend %expandableButton;
		background-color: palette(expandable-button, main-button-outer);
		z-index: 1;

		&:before {
			content: '';
			display: block;
			@extend %expandableButton;
			background: palette(expandable-button, main-button-inner);
		}
		i {
			font-size: 6vh;
			color: palette(expandable-button, main-button-color);
			@include center;
		}
	}

	.add {
		@extend %expandableButton-item;
	}
	.edit {
		@extend %expandableButton-item;
	}
	.clone {
		@extend %expandableButton-item;
	}
	.delete {
		@extend %expandableButton-item;
	}
	.link {
		@extend %expandableButton-item;
	}

	&.isActive {
		.expandButton {
			@include transform(translate(-50%, -50%) rotate(45deg));
			&:before {
				@include transform(translate(-50%, -50%) scale(1.4));
			}
		}
		.add {
			top: 70%;
			left: -85%;
			@include transition(all 0.25s);
		}
		.edit {
			top: -10%;
			left: -55%;
			@include transition(all 0.4s);
		}
		.clone {
			top: -60%;
			left: 15%;
			@include transition(all 0.75s);
		}
		.delete {
			top: -70%;
			left: 100%;
			@include transition(all 1s);
		}
		.link {
			top: -100%;
			left: -200%;
			@include transition(all 1s);
		}
	}

}
