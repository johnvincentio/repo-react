{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/projects-menu/ProjectsMenu.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router';\nimport { useServiceClient } from '../../service';\nimport { useProjectsStyles } from './styles';\nimport ProjectCreatorForm from './ProjectCreatorForm';\nimport Project from './Project'; // @ts-ignore\n\nimport ProjectsImg from '../../images/projects.svg';\nexport default function ProjectsMenu() {\n  const service = useServiceClient();\n  const {\n    error: errorLoading,\n    loading,\n    result\n  } = useAsync(service.getUserProjectsMeta.bind(service), []);\n  const {\n    error: errorDeleting,\n    execute: handleDelete\n  } = useAsyncCallback(id => {\n    service.deleteProject(id);\n    Router.reload();\n  });\n  const classNames = useProjectsStyles();\n  const {\n    0: isCreatorOpen,\n    1: setIsCreatorOpen\n  } = useState(false);\n\n  const openCreator = () => setIsCreatorOpen(true);\n\n  const closeCreator = () => setIsCreatorOpen(false);\n\n  return __jsx(\"div\", {\n    className: classNames.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classNames.menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, isCreatorOpen ? __jsx(ProjectCreatorForm, {\n    onCancel: closeCreator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }) : __jsx(Button, {\n    onClick: openCreator,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"New Project\"), result && result.map(({\n    id,\n    title,\n    description\n  }) => {\n    return __jsx(Project, {\n      key: id,\n      id: id,\n      title: title,\n      description: description,\n      onDelete: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(ProjectsImg, {\n    className: classNames.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/projects-menu/ProjectsMenu.tsx"],"names":["React","useState","useAsync","useAsyncCallback","Button","Router","useServiceClient","useProjectsStyles","ProjectCreatorForm","Project","ProjectsImg","ProjectsMenu","service","error","errorLoading","loading","result","getUserProjectsMeta","bind","errorDeleting","execute","handleDelete","id","deleteProject","reload","classNames","isCreatorOpen","setIsCreatorOpen","openCreator","closeCreator","root","menu","map","title","description","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,kBAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,SAASC,iBAAT,QAAkC,UAAlC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,OAAO,GAAGN,gBAAgB,EAAhC;AACA,QAAM;AACJO,IAAAA,KAAK,EAAEC,YADH;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFd,QAAQ,CAAkBU,OAAO,CAACK,mBAAR,CAA4BC,IAA5B,CAAiCN,OAAjC,CAAlB,EAA6D,EAA7D,CAJZ;AAMA,QAAM;AAAEC,IAAAA,KAAK,EAAEM,aAAT;AAAwBC,IAAAA,OAAO,EAAEC;AAAjC,MAAkDlB,gBAAgB,CAAEmB,EAAD,IAAgB;AACvFV,IAAAA,OAAO,CAACW,aAAR,CAAsBD,EAAtB;AACAjB,IAAAA,MAAM,CAACmB,MAAP;AACD,GAHuE,CAAxE;AAKA,QAAMC,UAAU,GAAGlB,iBAAiB,EAApC;AAEA,QAAM;AAAA,OAACmB,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1B,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAM2B,WAAW,GAAG,MAAMD,gBAAgB,CAAC,IAAD,CAA1C;;AACA,QAAME,YAAY,GAAG,MAAMF,gBAAgB,CAAC,KAAD,CAA3C;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEF,UAAU,CAACK,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEL,UAAU,CAACM,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,aAAa,GACV,MAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEG,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAEV,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHN,EAMGZ,MAAM,IAAIA,MAAM,CAACgB,GAAP,CAAW,CAAC;AAAEV,IAAAA,EAAF;AAAMW,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAD,KAA6C;AACjE,WACE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEZ,EAAd;AAAkB,MAAA,EAAE,EAAEA,EAAtB;AAA0B,MAAA,KAAK,EAAEW,KAAjC;AAAwC,MAAA,WAAW,EAAEC,WAArD;AAAkE,MAAA,QAAQ,EAAEb,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJU,CANb,CADF,EAcE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEI,UAAU,CAACU,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD","sourcesContent":["import React, { useState } from 'react';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router'\n\nimport { useServiceClient } from '../../service';\nimport { ProjectMeta } from '../../dashboard/store/types';\nimport { useProjectsStyles } from './styles';\nimport ProjectCreatorForm from './ProjectCreatorForm';\nimport Project from './Project';\n\n// @ts-ignore\nimport ProjectsImg from '../../images/projects.svg';\n\nexport default function ProjectsMenu() {\n  const service = useServiceClient();\n  const {\n    error: errorLoading,\n    loading,\n    result\n  } = useAsync<(ProjectMeta)[]>(service.getUserProjectsMeta.bind(service), []);\n\n  const { error: errorDeleting, execute: handleDelete } = useAsyncCallback((id: string) => {\n    service.deleteProject(id);\n    Router.reload();\n  });\n\n  const classNames = useProjectsStyles();\n\n  const [isCreatorOpen, setIsCreatorOpen] = useState(false);\n  const openCreator = () => setIsCreatorOpen(true);\n  const closeCreator = () => setIsCreatorOpen(false);\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.menu}>\n        {isCreatorOpen\n          ? <ProjectCreatorForm onCancel={closeCreator} />\n          : <Button onClick={openCreator} color=\"primary\">New Project</Button>\n        }\n\n        {result && result.map(({ id, title, description }: ProjectMeta) => {\n          return (\n            <Project key={id} id={id} title={title} description={description} onDelete={handleDelete} />\n          );\n        })}\n      </div>\n\n      <ProjectsImg className={classNames.image} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}