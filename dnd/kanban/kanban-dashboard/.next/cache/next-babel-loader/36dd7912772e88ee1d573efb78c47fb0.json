{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport CurrentUser from './CurrentUser';\nimport { StoreProvider } from './store';\nimport Menubar from './Menubar';\nimport Project from './Project';\nimport { useDashboardStyles } from './styles';\nexport default function Dashboard(_ref) {\n  _s();\n\n  var state = _ref.state,\n      title = _ref.title,\n      updateProjectData = _ref.updateProjectData,\n      projectsUrlPath = _ref.projectsUrlPath;\n  var classNames = useDashboardStyles();\n  return __jsx(StoreProvider, {\n    state: state,\n    updateProjectData: updateProjectData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(CurrentUser, {\n    userId: state.ids.user[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classNames.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Menubar, {\n    projectsUrlPath: projectsUrlPath,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: classNames.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Project, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Dashboard, \"dtdbdEsCrFumYtZMouV2e2MaX7A=\", false, function () {\n  return [useDashboardStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/Dashboard.tsx"],"names":["React","CurrentUser","StoreProvider","Menubar","Project","useDashboardStyles","Dashboard","state","title","updateProjectData","projectsUrlPath","classNames","ids","user","root","content"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AAQA,eAAe,SAASC,SAAT,OAAgF;AAAA;;AAAA,MAA3DC,KAA2D,QAA3DA,KAA2D;AAAA,MAApDC,KAAoD,QAApDA,KAAoD;AAAA,MAA7CC,iBAA6C,QAA7CA,iBAA6C;AAAA,MAA1BC,eAA0B,QAA1BA,eAA0B;AAC7F,MAAMC,UAAU,GAAGN,kBAAkB,EAArC;AAEA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAA6B,IAAA,iBAAiB,EAAEE,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,MAAM,EAAEF,KAAK,CAACK,GAAN,CAAUC,IAAV,CAAe,CAAf,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEF,UAAU,CAACG,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,eAAe,EAAEJ,eAA1B;AAA2C,IAAA,KAAK,EAAEF,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEG,UAAU,CAACI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF,CADF;AAYD;;GAfuBT,S;UACHD,kB;;;KADGC,S","sourcesContent":["import React from 'react';\n\nimport { ProjectData, UpdateProjectData } from './store/types';\nimport CurrentUser from './CurrentUser';\nimport { StoreProvider } from './store';\nimport Menubar from './Menubar';\nimport Project from './Project';\nimport { useDashboardStyles } from './styles';\n\nexport interface Props {\n  projectsUrlPath: string,\n  title: string,\n  state: ProjectData,\n  updateProjectData: UpdateProjectData,\n}\nexport default function Dashboard({ state, title, updateProjectData, projectsUrlPath }: Props) {\n  const classNames = useDashboardStyles();\n\n  return (\n    <StoreProvider state={state} updateProjectData={updateProjectData}>\n      <CurrentUser userId={state.ids.user[0]}>\n        <div className={classNames.root}>\n          <Menubar projectsUrlPath={projectsUrlPath} title={title} />\n          <div className={classNames.content}>\n            <Project/>\n          </div>\n        </div>\n      </CurrentUser>\n    </StoreProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}