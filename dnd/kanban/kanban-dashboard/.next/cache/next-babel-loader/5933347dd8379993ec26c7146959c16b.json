{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/projects-menu/Project.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { ConfirmationButtons } from '../buttons';\nimport Link from 'next/link';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateIcon from '@material-ui/icons/OpenInNew';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport { OptionsPopper } from '../options-popper';\nimport { useProjectStyles } from './styles';\n\nvar noop = function noop() {};\n\nexport default function Project(_ref) {\n  _s();\n\n  var id = _ref.id,\n      title = _ref.title,\n      description = _ref.description,\n      onDelete = _ref.onDelete;\n  var classNames = useProjectStyles();\n\n  var _useState = useState(false),\n      isDeleteConfirmOpen = _useState[0],\n      setIsDeleteConfirmOpen = _useState[1];\n\n  var openDeleteConfirm = function openDeleteConfirm() {\n    return setIsDeleteConfirmOpen(true);\n  };\n\n  var closeDeleteConfirm = function closeDeleteConfirm() {\n    return setIsDeleteConfirmOpen(false);\n  };\n\n  var handleDeleteConfirm = function handleDeleteConfirm() {\n    return onDelete(id);\n  };\n\n  return __jsx(\"div\", {\n    key: id,\n    className: classNames.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classNames.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"div\", {\n    className: classNames.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(OptionsPopper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(ProjectOptions, {\n    onClickDelete: openDeleteConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), __jsx(Link, {\n    href: \"/\".concat(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(IconButton, {\n    onClick: noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(NavigateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }\n  }))))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, description)), __jsx(Dialog, {\n    open: isDeleteConfirmOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    className: classNames.dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Delete column \\\"\", title, \"\\\"?\"), __jsx(ConfirmationButtons, {\n    onCancel: closeDeleteConfirm,\n    onConfirm: handleDeleteConfirm,\n    confirmColor: \"secondary\",\n    confirmLabel: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(Project, \"GOf8ZTVbh56QK/ND46DA/mD3NCE=\", false, function () {\n  return [useProjectStyles];\n});\n\n_c = Project;\nexport function ProjectOptions(_ref2) {\n  var onClickDelete = _ref2.onClickDelete;\n  return __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    onClick: onClickDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(ListItemText, {\n    primary: \"Delete Project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}\n_c2 = ProjectOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Project\");\n$RefreshReg$(_c2, \"ProjectOptions\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/projects-menu/Project.tsx"],"names":["React","useState","Typography","ConfirmationButtons","Link","IconButton","NavigateIcon","List","ListItem","ListItemText","Paper","Dialog","OptionsPopper","useProjectStyles","noop","Project","id","title","description","onDelete","classNames","isDeleteConfirmOpen","setIsDeleteConfirmOpen","openDeleteConfirm","closeDeleteConfirm","handleDeleteConfirm","root","header","buttons","dialog","ProjectOptions","onClickDelete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { ConfirmationButtons, } from '../buttons';\nimport Link from 'next/link';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateIcon from '@material-ui/icons/OpenInNew';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport { OptionsPopper } from '../options-popper';\nimport { useProjectStyles } from './styles';\n\nexport interface ProjectProps {\n  id: string,\n  title: string,\n  description: string,\n  onDelete: (id: string) => void,\n}\n\nconst noop = () => {};\n\nexport default function Project({ id, title, description, onDelete }: ProjectProps) {\n  const classNames = useProjectStyles();\n\n  const [isDeleteConfirmOpen, setIsDeleteConfirmOpen] = useState(false);\n  const openDeleteConfirm = () => setIsDeleteConfirmOpen(true);\n  const closeDeleteConfirm = () => setIsDeleteConfirmOpen(false);\n  const handleDeleteConfirm = () => onDelete(id)\n\n  return (\n    <div key={id} className={classNames.root}>\n      <div className={classNames.header}>\n        <Typography variant=\"h4\" component=\"h2\">{title}</Typography>\n\n        <div className={classNames.buttons}>\n          <OptionsPopper>\n            <ProjectOptions onClickDelete={openDeleteConfirm}/>\n          </OptionsPopper>\n\n          <Link href={`/${id}`}>\n            <IconButton onClick={noop}><NavigateIcon/></IconButton>\n          </Link>\n        </div>\n      </div>\n\n      <div>\n        <Typography>{description}</Typography>\n      </div>\n\n      <Dialog open={isDeleteConfirmOpen}>\n        <Paper className={classNames.dialog}>\n          <Typography>Delete column \"{title}\"?</Typography>\n          <ConfirmationButtons\n            onCancel={closeDeleteConfirm}\n            onConfirm={handleDeleteConfirm}\n            confirmColor=\"secondary\"\n            confirmLabel=\"Delete\"\n          />\n        </Paper>\n      </Dialog>\n    </div>\n  );\n}\n\nexport interface ProjectOptionsProps {\n  onClickDelete: () => void\n}\n\nexport function ProjectOptions({ onClickDelete }: ProjectOptionsProps) {\n  return (\n    <List>\n      <ListItem button onClick={onClickDelete}>\n        <ListItemText primary=\"Delete Project\"/>\n      </ListItem>\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}