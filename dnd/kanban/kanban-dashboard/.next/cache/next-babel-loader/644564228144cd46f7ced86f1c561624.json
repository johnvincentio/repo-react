{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/UsersMenu.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CurrentUserIcon from '@material-ui/icons/AccountCircle';\nimport NonCurrentUserIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport TextField from '@material-ui/core/TextField';\nimport { hooks } from './store';\nimport { useCurrentUserId, useSetCurrentUserId } from './CurrentUser';\nimport { ConfirmationButtons, EditButton } from '../components/buttons';\nimport { useUserItemStyles, useUserEditorStyles } from './styles';\nexport default function UsersMenu() {\n  _s();\n\n  var _this = this;\n\n  var ids = hooks.useUserIds();\n  var createUser = hooks.useCreateUser();\n\n  var _useState = useState(false),\n      isEditorOpen = _useState[0],\n      setIsEditorOpen = _useState[1];\n\n  var openEditor = function openEditor() {\n    return setIsEditorOpen(true);\n  };\n\n  var closeEditor = function closeEditor() {\n    return setIsEditorOpen(false);\n  };\n\n  var submitNewUser = function submitNewUser(username) {\n    createUser({\n      username: username\n    });\n    closeEditor();\n  };\n\n  return __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, isEditorOpen ? __jsx(UserEditorForm, {\n    onSubmit: submitNewUser,\n    onCancel: closeEditor,\n    username: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }) : __jsx(Button, {\n    onClick: openEditor,\n    fullWidth: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"New User\")), ids.map(function (id) {\n    return __jsx(ListItem, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(UserItem, {\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }));\n  }));\n}\n\n_s(UsersMenu, \"EFrehrR3MYw2VZT4Rb8UyTsYieA=\", false, function () {\n  return [hooks.useUserIds, hooks.useCreateUser];\n});\n\n_c = UsersMenu;\nexport function UserItem(_ref) {\n  _s2();\n\n  var id = _ref.id;\n  var user = hooks.useUser(id);\n  var currentUserId = useCurrentUserId();\n  var setCurrentUserId = useSetCurrentUserId();\n  var updateUser = hooks.useUpdateUser();\n\n  var _useState2 = useState(false),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var classNames = useUserItemStyles();\n  var isCurrentUser = user.id === currentUserId;\n\n  var openEditor = function openEditor() {\n    return setIsEditing(true);\n  };\n\n  var closeEditor = function closeEditor() {\n    return setIsEditing(false);\n  };\n\n  var handleClick = function handleClick() {\n    return setCurrentUserId(user.id);\n  };\n\n  var handleUpdateUsername = function handleUpdateUsername(username) {\n    updateUser(id, {\n      username: username\n    });\n    closeEditor();\n  };\n\n  var icon = isCurrentUser ? __jsx(CurrentUserIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }\n  }) : __jsx(NonCurrentUserIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 53\n    }\n  });\n  var username = isEditing ? __jsx(UserEditorForm, {\n    username: user.username,\n    onCancel: closeEditor,\n    onSubmit: handleUpdateUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }) : user.username;\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    onClick: handleClick,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, icon)), __jsx(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, username), __jsx(\"span\", {\n    className: classNames.editBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(EditButton, {\n    onClick: openEditor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s2(UserItem, \"O5UsFdDJegpxL4xtQwWQvGtNCrU=\", false, function () {\n  return [hooks.useUser, useCurrentUserId, useSetCurrentUserId, hooks.useUpdateUser, useUserItemStyles];\n});\n\n_c2 = UserItem;\nexport function UserEditorForm(_ref2) {\n  _s3();\n\n  var _ref2$username = _ref2.username,\n      initialUsername = _ref2$username === void 0 ? '' : _ref2$username,\n      onSubmit = _ref2.onSubmit,\n      onCancel = _ref2.onCancel;\n\n  var _useState3 = useState(initialUsername),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var classNames = useUserEditorStyles();\n\n  var handleSubmit = function handleSubmit() {\n    if (value) {\n      onSubmit(value);\n      setValue('');\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    onCancel();\n    setValue('');\n  };\n\n  return __jsx(\"div\", {\n    className: classNames.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    placeholder: \"Username\",\n    value: value,\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), __jsx(ConfirmationButtons, {\n    onConfirm: handleSubmit,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s3(UserEditorForm, \"jTEYzXuPSkPAN703eOYl1YTTjNo=\", false, function () {\n  return [useUserEditorStyles];\n});\n\n_c3 = UserEditorForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UsersMenu\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserEditorForm\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/UsersMenu.tsx"],"names":["React","Fragment","useState","List","ListItem","ListItemText","ListItemAvatar","Button","IconButton","CurrentUserIcon","NonCurrentUserIcon","TextField","hooks","useCurrentUserId","useSetCurrentUserId","ConfirmationButtons","EditButton","useUserItemStyles","useUserEditorStyles","UsersMenu","ids","useUserIds","createUser","useCreateUser","isEditorOpen","setIsEditorOpen","openEditor","closeEditor","submitNewUser","username","map","id","UserItem","user","useUser","currentUserId","setCurrentUserId","updateUser","useUpdateUser","isEditing","setIsEditing","classNames","isCurrentUser","handleClick","handleUpdateUsername","icon","editBtn","UserEditorForm","initialUsername","onSubmit","onCancel","value","setValue","handleSubmit","handleCancel","root","e","target"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CurrentUserIcon from '@material-ui/icons/AccountCircle';\nimport NonCurrentUserIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport TextField from '@material-ui/core/TextField';\n\nimport { hooks } from './store';\nimport { useCurrentUserId, useSetCurrentUserId } from './CurrentUser';\nimport { ConfirmationButtons, EditButton } from '../components/buttons';\nimport { useUserItemStyles, useUserEditorStyles } from './styles';\n\nexport default function UsersMenu() {\n  const ids = hooks.useUserIds();\n  const createUser = hooks.useCreateUser();\n\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const openEditor = () => setIsEditorOpen(true);\n  const closeEditor = () => setIsEditorOpen(false);\n  const submitNewUser = (username: string) => {\n    createUser({ username });\n    closeEditor();\n  }\n\n  return (\n    <List>\n      <ListItem>\n        {isEditorOpen\n          ? <UserEditorForm onSubmit={submitNewUser} onCancel={closeEditor} username=\"\" />\n          : <Button onClick={openEditor} fullWidth color=\"primary\">New User</Button>\n        }\n      </ListItem>\n      {ids.map(id => (\n        <ListItem key={id}>\n          <UserItem id={id} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport interface UserItemProps {\n  id: string\n}\nexport function UserItem({ id }: UserItemProps) {\n  const user = hooks.useUser(id);\n  const currentUserId = useCurrentUserId();\n  const setCurrentUserId = useSetCurrentUserId();\n  const updateUser = hooks.useUpdateUser();\n  const [isEditing, setIsEditing] = useState(false);\n  const classNames = useUserItemStyles();\n\n  const isCurrentUser =  user.id === currentUserId\n  const openEditor = () => setIsEditing(true);\n  const closeEditor = () => setIsEditing(false);\n  const handleClick = () => setCurrentUserId(user.id);\n  const handleUpdateUsername = (username: string) => {\n    updateUser(id, { username });\n    closeEditor();\n  }\n\n  const icon = isCurrentUser ? <CurrentUserIcon/> : <NonCurrentUserIcon/>;\n\n  const username = isEditing\n    ? (\n      <UserEditorForm\n        username={user.username}\n        onCancel={closeEditor}\n        onSubmit={handleUpdateUsername}\n      />\n    )\n    : user.username;\n\n  return (\n    <Fragment>\n      <ListItemAvatar>\n        <IconButton onClick={handleClick} color=\"primary\">\n          {icon}\n        </IconButton>\n      </ListItemAvatar>\n\n      <ListItemText>{username}</ListItemText>\n\n      <span className={classNames.editBtn}>\n        <EditButton onClick={openEditor} />\n      </span>\n    </Fragment>\n  );\n}\n\nexport interface UserEditorFormProps {\n  username?: string,\n  onSubmit: (username: string) => void,\n  onCancel: () => void\n}\nexport function UserEditorForm({ username: initialUsername = '', onSubmit, onCancel }: UserEditorFormProps) {\n  const [value, setValue] = useState(initialUsername);\n  const classNames = useUserEditorStyles();\n\n  const handleSubmit = () => {\n    if (value) {\n      onSubmit(value);\n      setValue('');\n    }\n  };\n\n  const handleCancel = () => {\n    onCancel();\n    setValue('');\n  };\n\n  return (\n    <div className={classNames.root}>\n      <TextField\n        autoFocus\n        fullWidth\n        placeholder=\"Username\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n\n      <ConfirmationButtons onConfirm={handleSubmit} onCancel={handleCancel} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}