{"ast":null,"code":"import { selectors } from './base';\nexport const getUserIds = state => selectors.getIds(state, {\n  type: 'user'\n});\nexport const getTaskIds = state => selectors.getIds(state, {\n  type: 'task'\n});\nexport const getStatusIds = state => selectors.getIds(state, {\n  type: 'status'\n});\nexport const getTagIds = state => selectors.getIds(state, {\n  type: 'tag'\n});\nexport const getCommentIds = state => selectors.getIds(state, {\n  type: 'comment'\n});\nexport const getUser = (state, args) => selectors.getEntity(state, {\n  type: 'user',\n  id: args.id\n});\nexport const getTask = (state, args) => selectors.getEntity(state, {\n  type: 'task',\n  id: args.id\n});\nexport const getStatus = (state, args) => selectors.getEntity(state, {\n  type: 'status',\n  id: args.id\n});\nexport const getTag = (state, args) => selectors.getEntity(state, {\n  type: 'tag',\n  id: args.id\n});\nexport const getComment = (state, args) => selectors.getEntity(state, {\n  type: 'comment',\n  id: args.id\n});\nexport const getCommentUsername = (state, args) => {\n  const comment = getComment(state, args);\n\n  if (!comment) {\n    return '';\n  }\n\n  const user = getUser(state, {\n    id: comment.creatorId\n  });\n\n  if (!user) {\n    return '';\n  }\n\n  return user.username;\n};","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/store/selectors.ts"],"names":["selectors","getUserIds","state","getIds","type","getTaskIds","getStatusIds","getTagIds","getCommentIds","getUser","args","getEntity","id","getTask","getStatus","getTag","getComment","getCommentUsername","comment","user","creatorId","username"],"mappings":"AACA,SAASA,SAAT,QAA0B,QAA1B;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAwBF,SAAS,CAACG,MAAV,CAAiBD,KAAjB,EAAwB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAxB,CAA3C;AACP,OAAO,MAAMC,UAAU,GAAIH,KAAD,IAAwBF,SAAS,CAACG,MAAV,CAAiBD,KAAjB,EAAwB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAxB,CAA3C;AACP,OAAO,MAAME,YAAY,GAAIJ,KAAD,IAAwBF,SAAS,CAACG,MAAV,CAAiBD,KAAjB,EAAwB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAxB,CAA7C;AACP,OAAO,MAAMG,SAAS,GAAIL,KAAD,IAAwBF,SAAS,CAACG,MAAV,CAAiBD,KAAjB,EAAwB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAxB,CAA1C;AACP,OAAO,MAAMI,aAAa,GAAIN,KAAD,IAAwBF,SAAS,CAACG,MAAV,CAAiBD,KAAjB,EAAwB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAxB,CAA9C;AAEP,OAAO,MAAMK,OAAO,GAAG,CAACP,KAAD,EAAqBQ,IAArB,KAA8CV,SAAS,CAACW,SAAV,CAA0BT,KAA1B,EAAiC;AAAEE,EAAAA,IAAI,EAAE,MAAR;AAAgBQ,EAAAA,EAAE,EAAEF,IAAI,CAACE;AAAzB,CAAjC,CAA9D;AACP,OAAO,MAAMC,OAAO,GAAG,CAACX,KAAD,EAAqBQ,IAArB,KAA8CV,SAAS,CAACW,SAAV,CAA0BT,KAA1B,EAAiC;AAAEE,EAAAA,IAAI,EAAE,MAAR;AAAgBQ,EAAAA,EAAE,EAAEF,IAAI,CAACE;AAAzB,CAAjC,CAA9D;AACP,OAAO,MAAME,SAAS,GAAG,CAACZ,KAAD,EAAqBQ,IAArB,KAA8CV,SAAS,CAACW,SAAV,CAA4BT,KAA5B,EAAmC;AAAEE,EAAAA,IAAI,EAAE,QAAR;AAAkBQ,EAAAA,EAAE,EAAEF,IAAI,CAACE;AAA3B,CAAnC,CAAhE;AACP,OAAO,MAAMG,MAAM,GAAG,CAACb,KAAD,EAAqBQ,IAArB,KAA8CV,SAAS,CAACW,SAAV,CAAyBT,KAAzB,EAAgC;AAAEE,EAAAA,IAAI,EAAE,KAAR;AAAeQ,EAAAA,EAAE,EAAEF,IAAI,CAACE;AAAxB,CAAhC,CAA7D;AACP,OAAO,MAAMI,UAAU,GAAG,CAACd,KAAD,EAAqBQ,IAArB,KAA8CV,SAAS,CAACW,SAAV,CAA6BT,KAA7B,EAAoC;AAAEE,EAAAA,IAAI,EAAE,SAAR;AAAmBQ,EAAAA,EAAE,EAAEF,IAAI,CAACE;AAA5B,CAApC,CAAjE;AAGP,OAAO,MAAMK,kBAAkB,GAAG,CAACf,KAAD,EAAqBQ,IAArB,KAAsC;AACtE,QAAMQ,OAAO,GAAGF,UAAU,CAACd,KAAD,EAAQQ,IAAR,CAA1B;;AACA,MAAI,CAACQ,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,QAAMC,IAAI,GAAGV,OAAO,CAACP,KAAD,EAAQ;AAAEU,IAAAA,EAAE,EAAEM,OAAO,CAACE;AAAd,GAAR,CAApB;;AACA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,EAAP;AACD;;AAED,SAAOA,IAAI,CAACE,QAAZ;AACD,CAZM","sourcesContent":["import { Comment, Status, Tag, Task, User, ProjectData } from './types';\nimport { selectors } from './base';\n\nexport const getUserIds = (state: ProjectData) => selectors.getIds(state, { type: 'user' }) as string[];\nexport const getTaskIds = (state: ProjectData) => selectors.getIds(state, { type: 'task' }) as string[];\nexport const getStatusIds = (state: ProjectData) => selectors.getIds(state, { type: 'status' }) as string[];\nexport const getTagIds = (state: ProjectData) => selectors.getIds(state, { type: 'tag' }) as string[];\nexport const getCommentIds = (state: ProjectData) => selectors.getIds(state, { type: 'comment' }) as string[];\n\nexport const getUser = (state: ProjectData, args: { id: string }) => selectors.getEntity<User>(state, { type: 'user', id: args.id });\nexport const getTask = (state: ProjectData, args: { id: string }) => selectors.getEntity<Task>(state, { type: 'task', id: args.id });\nexport const getStatus = (state: ProjectData, args: { id: string }) => selectors.getEntity<Status>(state, { type: 'status', id: args.id });\nexport const getTag = (state: ProjectData, args: { id: string }) => selectors.getEntity<Tag>(state, { type: 'tag', id: args.id });\nexport const getComment = (state: ProjectData, args: { id: string }) => selectors.getEntity<Comment>(state, { type: 'comment', id: args.id });\n\n\nexport const getCommentUsername = (state: ProjectData, args: { id }) => {\n  const comment = getComment(state, args);\n  if (!comment) {\n    return '';\n  }\n\n  const user = getUser(state, { id: comment.creatorId });\n  if (!user) {\n    return '';\n  }\n\n  return user.username;\n};\n"]},"metadata":{},"sourceType":"module"}