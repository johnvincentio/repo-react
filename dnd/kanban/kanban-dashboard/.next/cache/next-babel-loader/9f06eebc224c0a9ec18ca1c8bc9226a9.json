{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/store/StoreProvider.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer, emptyProjectData } from './base';\nimport { makeSaga } from './saga';\nexport function StoreProvider(_ref) {\n  var children = _ref.children,\n      updateProjectData = _ref.updateProjectData,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? emptyProjectData : _ref$state;\n  var sagaMiddleware = createSagaMiddleware(); // @ts-ignore\n\n  var store = createStore(reducer, state, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(makeSaga(updateProjectData));\n  return __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n}\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/store/StoreProvider.tsx"],"names":["React","applyMiddleware","createStore","composeWithDevTools","Provider","createSagaMiddleware","reducer","emptyProjectData","makeSaga","StoreProvider","children","updateProjectData","state","sagaMiddleware","store","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAGA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,QAA1C;AACA,SAASC,QAAT,QAAyB,QAAzB;AAQA,OAAO,SAASC,aAAT,OAIgB;AAAA,MAHrBC,QAGqB,QAHrBA,QAGqB;AAAA,MAFrBC,iBAEqB,QAFrBA,iBAEqB;AAAA,wBADrBC,KACqB;AAAA,MADrBA,KACqB,2BADbL,gBACa;AACrB,MAAMM,cAAc,GAAGR,oBAAoB,EAA3C,CADqB,CAGrB;;AACA,MAAMS,KAAK,GAAGZ,WAAW,CACvBI,OADuB,EAEvBM,KAFuB,EAGvBT,mBAAmB,CAACF,eAAe,CAACY,cAAD,CAAhB,CAHI,CAAzB;AAMAA,EAAAA,cAAc,CAACE,GAAf,CAAmBP,QAAQ,CAACG,iBAAD,CAA3B;AAEA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD;KArBeD,a","sourcesContent":["import React, { ReactNode } from 'react';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { ProjectData, UpdateProjectData } from './types';\nimport { reducer, emptyProjectData } from './base';\nimport { makeSaga } from './saga';\n\nexport interface StoreProviderProps {\n  children: ReactNode,\n  updateProjectData: UpdateProjectData,\n  state?: ProjectData,\n}\n\nexport function StoreProvider({\n  children,\n  updateProjectData,\n  state = emptyProjectData,\n}: StoreProviderProps) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  // @ts-ignore\n  const store = createStore(\n    reducer,\n    state,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  );\n\n  sagaMiddleware.run(makeSaga(updateProjectData));\n\n  return (\n    <Provider store={store}>\n      {children}\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}