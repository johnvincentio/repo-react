{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/comment/Comment.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport NewComment from './NewComment';\nimport { TextButton } from '../buttons';\nimport { useStyles } from './styles';\nexport default function Comment(_ref) {\n  _s();\n\n  var username = _ref.username,\n      value = _ref.value,\n      ts = _ref.ts,\n      childComments = _ref.childComments,\n      onSubmitReply = _ref.onSubmitReply;\n\n  var _useState = useState(false),\n      isReplyOpen = _useState[0],\n      setIsReplyOpen = _useState[1];\n\n  var classNames = useStyles();\n\n  var handleSubmitReply = function handleSubmitReply(replyValue, ts) {\n    if (onSubmitReply) {\n      onSubmitReply(replyValue, ts);\n    }\n\n    setIsReplyOpen(false);\n  };\n\n  var handleCancelReply = function handleCancelReply() {\n    return setIsReplyOpen(false);\n  };\n\n  var formattedTs = moment(new Date(ts)).format('M-D-YYYY h:mma');\n  return __jsx(\"div\", {\n    className: classNames.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classNames.commentHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, username, \" at \", formattedTs), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, value)), __jsx(TextButton, {\n    onClick: function onClick() {\n      return setIsReplyOpen(true);\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Reply\"), isReplyOpen && __jsx(\"div\", {\n    className: classNames.childrenContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(NewComment, {\n    onSubmit: handleSubmitReply,\n    onCancel: handleCancelReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: classNames.childrenContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, childComments));\n}\n\n_s(Comment, \"sCHD2OlwA7nVos747jeQqSrmo28=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/comment/Comment.tsx"],"names":["React","useState","Typography","moment","NewComment","TextButton","useStyles","Comment","username","value","ts","childComments","onSubmitReply","isReplyOpen","setIsReplyOpen","classNames","handleSubmitReply","replyValue","handleCancelReply","formattedTs","Date","format","comment","commentHeader","childrenContainer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAUA,eAAe,SAASC,OAAT,OAML;AAAA;;AAAA,MALRC,QAKQ,QALRA,QAKQ;AAAA,MAJRC,KAIQ,QAJRA,KAIQ;AAAA,MAHRC,EAGQ,QAHRA,EAGQ;AAAA,MAFRC,aAEQ,QAFRA,aAEQ;AAAA,MADRC,aACQ,QADRA,aACQ;;AAAA,kBAC8BX,QAAQ,CAAC,KAAD,CADtC;AAAA,MACDY,WADC;AAAA,MACYC,cADZ;;AAER,MAAMC,UAAU,GAAGT,SAAS,EAA5B;;AAEA,MAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAqBP,EAArB,EAAkC;AAC1D,QAAIE,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACK,UAAD,EAAaP,EAAb,CAAb;AACD;;AAEDI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAND;;AAQA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAMJ,cAAc,CAAC,KAAD,CAApB;AAAA,GAA1B;;AAEA,MAAMK,WAAW,GAAGhB,MAAM,CAAC,IAAIiB,IAAJ,CAASV,EAAT,CAAD,CAAN,CAAqBW,MAArB,CAA4B,gBAA5B,CAApB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEN,UAAU,CAACO,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,UAAU,CAACQ,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCf,QAAjC,UAA+CW,WAA/C,CADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaV,KAAb,CAFF,CADF,EAME,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMK,cAAc,CAAC,IAAD,CAApB;AAAA,KAArB;AAAiD,IAAA,KAAK,EAAC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAQGD,WAAW,IACZ;AAAK,IAAA,SAAS,EAAEE,UAAU,CAACS,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAER,iBAAtB;AAAyC,IAAA,QAAQ,EAAEE,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAcE;AAAK,IAAA,SAAS,EAAEH,UAAU,CAACS,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,aADH,CAdF,CADF;AAoBD;;GA1CuBJ,O;UAQHD,S;;;KARGC,O","sourcesContent":["import React, { ReactNode, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\n\nimport NewComment from './NewComment';\nimport { TextButton } from '../buttons';\nimport { useStyles } from './styles';\n\nexport interface Props {\n  username: string,\n  value: string,\n  ts: Date|null,\n  childComments?: ReactNode,\n  onSubmitReply?: (value: string, ts: Date) => void,\n}\n\nexport default function Comment({\n  username,\n  value,\n  ts,\n  childComments,\n  onSubmitReply,\n}: Props) {\n  const [isReplyOpen, setIsReplyOpen] = useState(false);\n  const classNames = useStyles();\n\n  const handleSubmitReply = (replyValue: string, ts: Date) => {\n    if (onSubmitReply) {\n      onSubmitReply(replyValue, ts);\n    }\n\n    setIsReplyOpen(false);\n  };\n\n  const handleCancelReply = () => setIsReplyOpen(false);\n\n  const formattedTs = moment(new Date(ts)).format('M-D-YYYY h:mma');\n\n  return (\n    <div className={classNames.comment}>\n      <div className={classNames.commentHeader}>\n        <Typography variant=\"subtitle2\">{username} at {formattedTs}</Typography>\n        <Typography>{value}</Typography>\n      </div>\n\n      <TextButton onClick={() => setIsReplyOpen(true)} color=\"primary\">Reply</TextButton>\n\n      {isReplyOpen &&\n      <div className={classNames.childrenContainer}>\n        <NewComment onSubmit={handleSubmitReply} onCancel={handleCancelReply}/>\n      </div>\n      }\n\n      <div className={classNames.childrenContainer}>\n        {childComments}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}