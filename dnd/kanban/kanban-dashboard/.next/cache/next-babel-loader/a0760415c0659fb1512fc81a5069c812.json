{"ast":null,"code":"import { spawn, takeEvery, call, select } from 'redux-saga/effects';\nimport { actionTypes } from './base';\nexport function makeSaga(updateProjectData) {\n  function* rootSaga() {\n    yield spawn(watchModelActions);\n  }\n\n  function* watchModelActions() {\n    for (let actionType of Object.values(actionTypes)) {\n      yield takeEvery(actionType, handleModelAction);\n    }\n  }\n\n  function* handleModelAction() {\n    const projectData = yield select();\n    yield call(updateProjectData, projectData);\n  }\n\n  return rootSaga;\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/store/saga.ts"],"names":["spawn","takeEvery","call","select","actionTypes","makeSaga","updateProjectData","rootSaga","watchModelActions","actionType","Object","values","handleModelAction","projectData"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,MAAjC,QAA+C,oBAA/C;AAGA,SAASC,WAAT,QAA4B,QAA5B;AAGA,OAAO,SAASC,QAAT,CAAkBC,iBAAlB,EAAwD;AAC7D,YAAUC,QAAV,GAAqB;AACnB,UAAMP,KAAK,CAACQ,iBAAD,CAAX;AACD;;AAED,YAAUA,iBAAV,GAA8B;AAC5B,SAAK,IAAIC,UAAT,IAAuBC,MAAM,CAACC,MAAP,CAAcP,WAAd,CAAvB,EAAmD;AACjD,YAAMH,SAAS,CAACQ,UAAD,EAAaG,iBAAb,CAAf;AACD;AACF;;AAED,YAAUA,iBAAV,GAA8B;AAC5B,UAAMC,WAAW,GAAG,MAAMV,MAAM,EAAhC;AACA,UAAMD,IAAI,CAACI,iBAAD,EAAoBO,WAApB,CAAV;AACD;;AAED,SAAON,QAAP;AACD","sourcesContent":["import { spawn, takeEvery, call, select } from 'redux-saga/effects';\nimport { CreateAction } from 'normalized-reducer';\n\nimport { actionTypes } from './base';\nimport { UpdateProjectData } from './types';\n\nexport function makeSaga(updateProjectData: UpdateProjectData) {\n  function* rootSaga() {\n    yield spawn(watchModelActions);\n  }\n\n  function* watchModelActions() {\n    for (let actionType of Object.values(actionTypes)) {\n      yield takeEvery(actionType, handleModelAction);\n    }\n  }\n\n  function* handleModelAction() {\n    const projectData = yield select();\n    yield call(updateProjectData, projectData)\n  }\n\n  return rootSaga;\n}\n"]},"metadata":{},"sourceType":"module"}