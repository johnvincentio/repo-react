{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/TaskEditorForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { ConfirmationButtons } from '../components/buttons';\nexport default function TaskEditorForm({\n  onSubmit,\n  onCancel,\n  title: initialTitle = ''\n}) {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(initialTitle);\n\n  const handleSubmit = () => {\n    if (title) {\n      onSubmit(title);\n      setTitle('');\n    }\n  };\n\n  const handleCancel = () => {\n    onCancel();\n    setTitle('');\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    placeholder: \"Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(ConfirmationButtons, {\n    onConfirm: handleSubmit,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/TaskEditorForm.tsx"],"names":["React","useState","TextField","ConfirmationButtons","TaskEditorForm","onSubmit","onCancel","title","initialTitle","setTitle","handleSubmit","handleCancel","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AASA,eAAe,SAASC,cAAT,CAAwB;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,QAFqC;AAGrCC,EAAAA,KAAK,EAAEC,YAAY,GAAG;AAHe,CAAxB,EAIL;AACR,QAAM;AAAA,OAACD,KAAD;AAAA,OAAQE;AAAR,MAAoBR,QAAQ,CAACO,YAAD,CAAlC;;AAEA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAIH,KAAJ,EAAW;AACTF,MAAAA,QAAQ,CAACE,KAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GALD;;AAOA,QAAME,YAAY,GAAG,MAAM;AACzBL,IAAAA,QAAQ;AACRG,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEF,KAJT;AAKE,IAAA,QAAQ,EAAEK,CAAC,IAAIH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,mBAAD;AAAqB,IAAA,SAAS,EAAEJ,YAAhC;AAA8C,IAAA,QAAQ,EAAEC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport { ConfirmationButtons } from '../components/buttons';\n\nexport interface Props {\n  title?: string,\n  description?: string,\n  onSubmit: (title: string) => void\n  onCancel: () => void\n}\n\nexport default function TaskEditorForm({\n  onSubmit,\n  onCancel,\n  title: initialTitle = '',\n}: Props) {\n  const [title, setTitle] = useState(initialTitle);\n\n  const handleSubmit = () => {\n    if (title) {\n      onSubmit(title);\n      setTitle('');\n    }\n  };\n\n  const handleCancel = () => {\n    onCancel();\n    setTitle('');\n  };\n\n  return (\n    <div>\n      <TextField\n        autoFocus\n        fullWidth\n        placeholder=\"Title\"\n        value={title}\n        onChange={e => setTitle(e.target.value)}\n      />\n\n      <ConfirmationButtons onConfirm={handleSubmit} onCancel={handleCancel} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}