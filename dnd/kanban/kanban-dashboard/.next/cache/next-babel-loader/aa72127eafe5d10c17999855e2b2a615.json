{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/buttons/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useStyles } from './styles';\nexport const AddButton = (_ref) => {\n  let {\n    iconProps\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"iconProps\"]);\n\n  return __jsx(IconButton, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }), __jsx(AddIcon, _extends({}, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }\n  })));\n};\nexport const DeleteButton = (_ref2) => {\n  let {\n    iconProps\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"iconProps\"]);\n\n  return __jsx(IconButton, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }), __jsx(DeleteIcon, _extends({}, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }\n  })));\n};\nexport const OptionsButton = (_ref3) => {\n  let {\n    iconProps\n  } = _ref3,\n      props = _objectWithoutProperties(_ref3, [\"iconProps\"]);\n\n  return __jsx(IconButton, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }), __jsx(MoreHorizIcon, _extends({}, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }\n  })));\n};\nexport const EditButton = (_ref4) => {\n  let {\n    iconProps\n  } = _ref4,\n      props = _objectWithoutProperties(_ref4, [\"iconProps\"]);\n\n  return __jsx(IconButton, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }), __jsx(EditIcon, _extends({\n    fontSize: \"small\"\n  }, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  })));\n};\nexport const CloseButton = (_ref5) => {\n  let {\n    iconProps\n  } = _ref5,\n      props = _objectWithoutProperties(_ref5, [\"iconProps\"]);\n\n  return __jsx(IconButton, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }), __jsx(CloseIcon, _extends({}, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  })));\n};\nexport const CheckButton = (_ref6) => {\n  let {\n    iconProps\n  } = _ref6,\n      props = _objectWithoutProperties(_ref6, [\"iconProps\"]);\n\n  return __jsx(IconButton, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }), __jsx(CheckIcon, _extends({}, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }\n  })));\n};\nexport const TextButton = (_ref7) => {\n  let {\n    children\n  } = _ref7,\n      props = _objectWithoutProperties(_ref7, [\"children\"]);\n\n  const classNames = useStyles();\n  return __jsx(\"button\", _extends({\n    className: classNames.textButton\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }), children);\n};\nexport function ConfirmationButtons({\n  onCancel,\n  onConfirm,\n  cancelLabel = 'Cancel',\n  confirmLabel = 'Done',\n  confirmColor = 'primary'\n}) {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, cancelLabel)), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: onConfirm,\n    color: confirmColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, confirmLabel))));\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/buttons/index.tsx"],"names":["React","IconButton","AddIcon","MoreHorizIcon","DeleteIcon","EditIcon","CloseIcon","CheckIcon","Grid","Button","useStyles","AddButton","iconProps","props","DeleteButton","OptionsButton","EditButton","CloseButton","CheckButton","TextButton","children","classNames","textButton","ConfirmationButtons","onCancel","onConfirm","cancelLabel","confirmLabel","confirmColor","classes","buttons"],"mappings":"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","sourcesContent":["import React, { ReactNode, HTMLAttributes } from 'react';\nimport IconButton, { IconButtonProps as MuiIconButtonProps } from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport { SvgIconTypeMap } from '@material-ui/core/SvgIcon/SvgIcon';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport { useStyles } from './styles';\n\nexport type IconButtonProps = MuiIconButtonProps & {\n  iconProps?: OverridableComponent<SvgIconTypeMap>\n}\n\nexport const AddButton = ({ iconProps, ...props }: IconButtonProps) =>\n  <IconButton {...props}><AddIcon {...iconProps} /></IconButton>;\n\nexport const DeleteButton = ({ iconProps, ...props }: IconButtonProps) =>\n  <IconButton {...props}><DeleteIcon {...iconProps} /></IconButton>;\n\nexport const OptionsButton = ({ iconProps, ...props }: IconButtonProps) =>\n  <IconButton {...props}><MoreHorizIcon {...iconProps} /></IconButton>;\n\nexport const EditButton = ({ iconProps, ...props }: IconButtonProps) =>\n  <IconButton {...props}><EditIcon fontSize=\"small\" {...iconProps} /></IconButton>;\n\nexport const CloseButton = ({ iconProps, ...props }: IconButtonProps) =>\n  <IconButton {...props}><CloseIcon {...iconProps} /></IconButton>;\n\nexport const CheckButton = ({ iconProps, ...props }: IconButtonProps) =>\n  <IconButton {...props}><CheckIcon {...iconProps} /></IconButton>;\n\n\nexport interface TextButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  children: ReactNode,\n}\nexport const TextButton = ({ children, ...props }: TextButtonProps) => {\n  const classNames = useStyles();\n  return <button className={classNames.textButton} {...props}>{children}</button>\n};\n\nexport interface ConfirmationButtonsProps {\n  onCancel: () => void,\n  onConfirm: () => void,\n  cancelLabel?: string,\n  confirmLabel?: string,\n  confirmColor?: 'primary' | 'secondary'\n}\n\nexport function ConfirmationButtons({\n  onCancel,\n  onConfirm,\n  cancelLabel = 'Cancel',\n  confirmLabel = 'Done',\n  confirmColor = 'primary'\n}: ConfirmationButtonsProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.buttons}>\n      <Grid container spacing={1} >\n        <Grid item xs={6}>\n          <Button fullWidth onClick={onCancel}>{cancelLabel}</Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button fullWidth onClick={onConfirm} color={confirmColor}>{confirmLabel}</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}