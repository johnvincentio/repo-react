{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/comment/NewComment.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useStyles } from './styles';\nexport default function NewComment(_ref) {\n  _s();\n\n  var onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var classNames = useStyles();\n\n  var handleClickSubmit = function handleClickSubmit() {\n    if (!!value) {\n      onSubmit(value, new Date());\n      setValue('');\n    }\n  };\n\n  var handleClickCancel = function handleClickCancel() {\n    onCancel();\n    setValue('');\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    multiline: true,\n    autoFocus: true,\n    fullWidth: true,\n    value: value,\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    placeholder: \"Leave a comment:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classNames.newCommentButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleClickCancel,\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleClickSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Reply\"))));\n}\n\n_s(NewComment, \"yJ29BfRYTfgGhehuPk1gQ/mVeXs=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewComment\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/comment/NewComment.tsx"],"names":["React","useState","TextField","Button","useStyles","NewComment","onSubmit","onCancel","value","setValue","classNames","handleClickSubmit","Date","handleClickCancel","e","target","newCommentButtons"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAOA,eAAe,SAASC,UAAT,OAAmD;AAAA;;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;;AAAA,kBACtCN,QAAQ,CAAC,EAAD,CAD8B;AAAA,MACzDO,KADyD;AAAA,MAClDC,QADkD;;AAEhE,MAAMC,UAAU,GAAGN,SAAS,EAA5B;;AAEA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAI,CAAC,CAACH,KAAN,EAAa;AACXF,MAAAA,QAAQ,CAACE,KAAD,EAAQ,IAAII,IAAJ,EAAR,CAAR;AACAH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GALD;;AAOA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BN,IAAAA,QAAQ;AACRE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,MADX;AACY,IAAA,SAAS,MADrB;AACsB,IAAA,SAAS,MAD/B;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,aAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAZ;AAAA,KAHb;AAIE,IAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAK,IAAA,SAAS,EAAEE,UAAU,CAACM,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,iBAAjB;AAAoC,IAAA,OAAO,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,iBAAjB;AAAoC,IAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,CAPF,CADF;AAgBD;;GAhCuBN,U;UAEHD,S;;;KAFGC,U","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { useStyles } from './styles';\n\nexport interface Props {\n  onSubmit: (value: string, ts: Date) => void,\n  onCancel?: () => void,\n}\n\nexport default function NewComment({ onSubmit, onCancel }: Props) {\n  const [value, setValue] = useState('');\n  const classNames = useStyles();\n\n  const handleClickSubmit = () => {\n    if (!!value) {\n      onSubmit(value, new Date());\n      setValue('');\n    }\n  };\n\n  const handleClickCancel = () => {\n    onCancel();\n    setValue('');\n  };\n\n  return (\n    <div>\n      <TextField\n        multiline autoFocus fullWidth\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        placeholder=\"Leave a comment:\"\n      />\n      <div className={classNames.newCommentButtons}>\n        <div>\n          <Button onClick={handleClickCancel} variant=\"text\">Cancel</Button>\n          <Button onClick={handleClickSubmit} color=\"primary\">Reply</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}