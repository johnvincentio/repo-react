{"ast":null,"code":"import makeNormalizedSlice, { Cardinalities } from 'normalized-reducer';\nvar MANY = Cardinalities.MANY,\n    ONE = Cardinalities.ONE;\nexport var schema = {\n  user: {\n    createdTaskIds: {\n      type: 'task',\n      cardinality: MANY,\n      reciprocal: 'creatorId'\n    },\n    assignedTaskIds: {\n      type: 'task',\n      cardinality: MANY,\n      reciprocal: 'assigneeId'\n    },\n    commentIds: {\n      type: 'comment',\n      cardinality: MANY,\n      reciprocal: 'creatorId'\n    }\n  },\n  task: {\n    creatorId: {\n      type: 'user',\n      cardinality: ONE,\n      reciprocal: 'createdTaskIds'\n    },\n    assigneeId: {\n      type: 'user',\n      cardinality: ONE,\n      reciprocal: 'assignedTaskIds'\n    },\n    statusId: {\n      type: 'status',\n      cardinality: ONE,\n      reciprocal: 'taskIds'\n    },\n    tagIds: {\n      type: 'tag',\n      cardinality: MANY,\n      reciprocal: 'taskIds'\n    },\n    rootCommentIds: {\n      type: 'comment',\n      cardinality: MANY,\n      reciprocal: 'taskId'\n    }\n  },\n  status: {\n    taskIds: {\n      type: 'task',\n      cardinality: MANY,\n      reciprocal: 'statusId'\n    }\n  },\n  tag: {\n    taskIds: {\n      type: 'task',\n      cardinality: MANY,\n      reciprocal: 'tagIds'\n    }\n  },\n  comment: {\n    creatorId: {\n      type: 'user',\n      cardinality: ONE,\n      reciprocal: 'commentIds'\n    },\n    taskId: {\n      type: 'task',\n      cardinality: ONE,\n      reciprocal: 'rootCommentIds'\n    },\n    parentCommentId: {\n      type: 'comment',\n      cardinality: ONE,\n      reciprocal: 'childCommentIds'\n    },\n    childCommentIds: {\n      type: 'comment',\n      cardinality: MANY,\n      reciprocal: 'parentCommentId'\n    }\n  }\n};\n\nvar _makeNormalizedSlice = makeNormalizedSlice(schema, function (actionType) {\n  return \"project/\".concat(actionType);\n}),\n    actionCreators = _makeNormalizedSlice.actionCreators,\n    selectors = _makeNormalizedSlice.selectors,\n    emptyProjectData = _makeNormalizedSlice.emptyState,\n    actionTypes = _makeNormalizedSlice.actionTypes,\n    reducer = _makeNormalizedSlice.reducer;\n\nexport { actionCreators, selectors, emptyProjectData, actionTypes, reducer };","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/store/base.ts"],"names":["makeNormalizedSlice","Cardinalities","MANY","ONE","schema","user","createdTaskIds","type","cardinality","reciprocal","assignedTaskIds","commentIds","task","creatorId","assigneeId","statusId","tagIds","rootCommentIds","status","taskIds","tag","comment","taskId","parentCommentId","childCommentIds","actionType","actionCreators","selectors","emptyProjectData","emptyState","actionTypes","reducer"],"mappings":"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","sourcesContent":["import makeNormalizedSlice, { Cardinalities, Schema } from 'normalized-reducer';\nimport { ProjectData } from './types';\n\nconst { MANY, ONE } = Cardinalities;\n\nexport const schema: Schema = {\n  user: {\n    createdTaskIds: { type: 'task', cardinality: MANY, reciprocal: 'creatorId' },\n    assignedTaskIds: { type: 'task', cardinality: MANY, reciprocal: 'assigneeId' },\n    commentIds: { type: 'comment', cardinality: MANY, reciprocal: 'creatorId' },\n  },\n  task: {\n    creatorId: { type: 'user', cardinality: ONE, reciprocal: 'createdTaskIds' },\n    assigneeId: { type: 'user', cardinality: ONE, reciprocal: 'assignedTaskIds' },\n    statusId: { type: 'status', cardinality: ONE, reciprocal: 'taskIds' },\n    tagIds: { type: 'tag', cardinality: MANY, reciprocal: 'taskIds' },\n    rootCommentIds: { type: 'comment', cardinality: MANY, reciprocal: 'taskId' }\n  },\n  status: {\n    taskIds: { type: 'task', cardinality: MANY, reciprocal: 'statusId' }\n  },\n  tag: {\n    taskIds: { type: 'task', cardinality: MANY, reciprocal: 'tagIds' }\n  },\n  comment: {\n    creatorId: { type: 'user', cardinality: ONE, reciprocal: 'commentIds' },\n    taskId: { type: 'task', cardinality: ONE, reciprocal: 'rootCommentIds', },\n    parentCommentId: { type: 'comment', cardinality: ONE, reciprocal: 'childCommentIds' },\n    childCommentIds: { type: 'comment', cardinality: MANY, reciprocal: 'parentCommentId' }\n  }\n};\n\nexport const {\n  actionCreators,\n  selectors,\n  emptyState: emptyProjectData,\n  actionTypes,\n  reducer,\n} = makeNormalizedSlice<ProjectData>(schema, (actionType: string) => `project/${actionType}`);\n"]},"metadata":{},"sourceType":"module"}