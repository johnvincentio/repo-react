{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/projects-menu/ProjectsMenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router';\nimport { useServiceClient } from '../../service';\nimport { useProjectsStyles } from './styles';\nimport ProjectCreatorForm from './ProjectCreatorForm';\nimport Project from './Project'; // @ts-ignore\n\nimport ProjectsImg from '../../images/projects.svg';\nexport default function ProjectsMenu() {\n  _s();\n\n  var _this = this;\n\n  var service = useServiceClient();\n\n  var _useAsync = useAsync(service.getUserProjectsMeta.bind(service), []),\n      errorLoading = _useAsync.error,\n      loading = _useAsync.loading,\n      result = _useAsync.result;\n\n  var _useAsyncCallback = useAsyncCallback(function (id) {\n    service.deleteProject(id);\n    Router.reload();\n  }),\n      errorDeleting = _useAsyncCallback.error,\n      handleDelete = _useAsyncCallback.execute;\n\n  var classNames = useProjectsStyles();\n\n  var _useState = useState(false),\n      isCreatorOpen = _useState[0],\n      setIsCreatorOpen = _useState[1];\n\n  var openCreator = function openCreator() {\n    return setIsCreatorOpen(true);\n  };\n\n  var closeCreator = function closeCreator() {\n    return setIsCreatorOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classNames.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classNames.menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, isCreatorOpen ? __jsx(ProjectCreatorForm, {\n    onCancel: closeCreator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }) : __jsx(Button, {\n    onClick: openCreator,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"New Project\"), result && result.map(function (_ref) {\n    var id = _ref.id,\n        title = _ref.title,\n        description = _ref.description;\n    return __jsx(Project, {\n      key: id,\n      id: id,\n      title: title,\n      description: description,\n      onDelete: handleDelete,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(ProjectsImg, {\n    className: classNames.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ProjectsMenu, \"cwyl5qc0hgx6GAUHjZn3fYqHbIE=\", false, function () {\n  return [useServiceClient, useAsync, useAsyncCallback, useProjectsStyles];\n});\n\n_c = ProjectsMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsMenu\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/components/projects-menu/ProjectsMenu.tsx"],"names":["React","useState","useAsync","useAsyncCallback","Button","Router","useServiceClient","useProjectsStyles","ProjectCreatorForm","Project","ProjectsImg","ProjectsMenu","service","getUserProjectsMeta","bind","errorLoading","error","loading","result","id","deleteProject","reload","errorDeleting","handleDelete","execute","classNames","isCreatorOpen","setIsCreatorOpen","openCreator","closeCreator","root","menu","map","title","description","image"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,kBAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,SAASC,iBAAT,QAAkC,UAAlC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA;;AACrC,MAAMC,OAAO,GAAGN,gBAAgB,EAAhC;;AADqC,kBAMjCJ,QAAQ,CAAkBU,OAAO,CAACC,mBAAR,CAA4BC,IAA5B,CAAiCF,OAAjC,CAAlB,EAA6D,EAA7D,CANyB;AAAA,MAG5BG,YAH4B,aAGnCC,KAHmC;AAAA,MAInCC,OAJmC,aAInCA,OAJmC;AAAA,MAKnCC,MALmC,aAKnCA,MALmC;;AAAA,0BAQmBf,gBAAgB,CAAC,UAACgB,EAAD,EAAgB;AACvFP,IAAAA,OAAO,CAACQ,aAAR,CAAsBD,EAAtB;AACAd,IAAAA,MAAM,CAACgB,MAAP;AACD,GAHuE,CARnC;AAAA,MAQtBC,aARsB,qBAQ7BN,KAR6B;AAAA,MAQEO,YARF,qBAQPC,OARO;;AAarC,MAAMC,UAAU,GAAGlB,iBAAiB,EAApC;;AAbqC,kBAeKN,QAAQ,CAAC,KAAD,CAfb;AAAA,MAe9ByB,aAf8B;AAAA,MAefC,gBAfe;;AAgBrC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,gBAAgB,CAAC,IAAD,CAAtB;AAAA,GAApB;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMF,gBAAgB,CAAC,KAAD,CAAtB;AAAA,GAArB;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEF,UAAU,CAACK,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEL,UAAU,CAACM,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,aAAa,GACV,MAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEG,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAEV,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHN,EAMGV,MAAM,IAAIA,MAAM,CAACc,GAAP,CAAW,gBAA6C;AAAA,QAA1Cb,EAA0C,QAA1CA,EAA0C;AAAA,QAAtCc,KAAsC,QAAtCA,KAAsC;AAAA,QAA/BC,WAA+B,QAA/BA,WAA+B;AACjE,WACE,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEf,EAAd;AAAkB,MAAA,EAAE,EAAEA,EAAtB;AAA0B,MAAA,KAAK,EAAEc,KAAjC;AAAwC,MAAA,WAAW,EAAEC,WAArD;AAAkE,MAAA,QAAQ,EAAEX,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJU,CANb,CADF,EAcE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEE,UAAU,CAACU,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD;;GArCuBxB,Y;UACNL,gB,EAKZJ,Q,EAEoDC,gB,EAKrCI,iB;;;KAbGI,Y","sourcesContent":["import React, { useState } from 'react';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router'\n\nimport { useServiceClient } from '../../service';\nimport { ProjectMeta } from '../../dashboard/store/types';\nimport { useProjectsStyles } from './styles';\nimport ProjectCreatorForm from './ProjectCreatorForm';\nimport Project from './Project';\n\n// @ts-ignore\nimport ProjectsImg from '../../images/projects.svg';\n\nexport default function ProjectsMenu() {\n  const service = useServiceClient();\n  const {\n    error: errorLoading,\n    loading,\n    result\n  } = useAsync<(ProjectMeta)[]>(service.getUserProjectsMeta.bind(service), []);\n\n  const { error: errorDeleting, execute: handleDelete } = useAsyncCallback((id: string) => {\n    service.deleteProject(id);\n    Router.reload();\n  });\n\n  const classNames = useProjectsStyles();\n\n  const [isCreatorOpen, setIsCreatorOpen] = useState(false);\n  const openCreator = () => setIsCreatorOpen(true);\n  const closeCreator = () => setIsCreatorOpen(false);\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.menu}>\n        {isCreatorOpen\n          ? <ProjectCreatorForm onCancel={closeCreator} />\n          : <Button onClick={openCreator} color=\"primary\">New Project</Button>\n        }\n\n        {result && result.map(({ id, title, description }: ProjectMeta) => {\n          return (\n            <Project key={id} id={id} title={title} description={description} onDelete={handleDelete} />\n          );\n        })}\n      </div>\n\n      <ProjectsImg className={classNames.image} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}