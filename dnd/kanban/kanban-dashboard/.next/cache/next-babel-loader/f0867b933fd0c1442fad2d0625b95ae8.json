{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/TaskAssignment.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { TextButton } from '../components/buttons';\nimport { hooks } from './store';\nimport { useTaskAssignmentStyles } from './styles';\nexport default function TaskAssignment(_ref) {\n  _s();\n\n  var _this = this;\n\n  var id = _ref.id;\n  var userIds = hooks.useUserIds();\n\n  var _hooks$useTask = hooks.useTask(id),\n      assigneeId = _hooks$useTask.assigneeId;\n\n  var assignTask = hooks.useAssignTask();\n  var unassignTask = hooks.useUnassignTask();\n\n  var handleUnassignment = function handleUnassignment() {\n    unassignTask(id, assigneeId);\n  };\n\n  var handleChange = function handleChange(e) {\n    var userId = e.target.value;\n    userId ? assignTask(id, userId) : handleUnassignment();\n  };\n\n  var classNames = useTaskAssignmentStyles();\n  return __jsx(\"div\", {\n    className: classNames.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Select, {\n    value: assigneeId || '',\n    onChange: handleChange,\n    variant: \"outlined\",\n    className: classNames.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(MenuItem, {\n    value: \"\",\n    selected: !assigneeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"\\xA0\"), userIds.map(function (userId) {\n    return __jsx(MenuItem, {\n      key: userId,\n      value: userId,\n      selected: userId === assigneeId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, __jsx(AssignableUsername, {\n      id: userId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }));\n  })), assigneeId && __jsx(\"div\", {\n    className: classNames.unassignBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(TextButton, {\n    onClick: handleUnassignment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Unassign\")));\n}\n\n_s(TaskAssignment, \"3MErpv35yIrHjbab6+6VuMSVNRc=\", false, function () {\n  return [hooks.useUserIds, hooks.useTask, hooks.useAssignTask, hooks.useUnassignTask, useTaskAssignmentStyles];\n});\n\n_c = TaskAssignment;\n\nfunction AssignableUsername(_ref2) {\n  _s2();\n\n  var id = _ref2.id;\n  var user = hooks.useUser(id);\n\n  if (!user) {\n    return null;\n  }\n\n  return __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, user.username);\n}\n\n_s2(AssignableUsername, \"BPnln+wUpxLjLAxQmw7xYz9C+QI=\", false, function () {\n  return [hooks.useUser];\n});\n\n_c2 = AssignableUsername;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskAssignment\");\n$RefreshReg$(_c2, \"AssignableUsername\");","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/TaskAssignment.tsx"],"names":["React","Select","MenuItem","TextButton","hooks","useTaskAssignmentStyles","TaskAssignment","id","userIds","useUserIds","useTask","assigneeId","assignTask","useAssignTask","unassignTask","useUnassignTask","handleUnassignment","handleChange","e","userId","target","value","classNames","container","select","map","unassignBtn","AssignableUsername","user","useUser","username"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, forwardRef } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { TextButton } from '../components/buttons';\n\nimport { hooks } from './store';\nimport { useTaskAssignmentStyles } from './styles';\n\nexport interface Props {\n  id: string\n}\n\nexport default function TaskAssignment({ id }: Props) {\n  const userIds = hooks.useUserIds();\n  const { assigneeId } = hooks.useTask(id);\n  const assignTask = hooks.useAssignTask();\n  const unassignTask = hooks.useUnassignTask();\n\n  const handleUnassignment = () => {\n    unassignTask(id, assigneeId);\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const userId = e.target.value as string;\n\n    userId\n      ? assignTask(id, userId)\n      : handleUnassignment();\n  };\n\n  const classNames = useTaskAssignmentStyles();\n\n  return (\n    <div className={classNames.container}>\n      <Select\n        value={assigneeId || ''}\n        onChange={handleChange}\n        variant=\"outlined\"\n        className={classNames.select}\n      >\n        <MenuItem value=\"\" selected={!assigneeId}>&nbsp;</MenuItem>\n        {userIds.map(userId => (\n          <MenuItem key={userId} value={userId} selected={userId === assigneeId}>\n            <AssignableUsername id={userId}/>\n          </MenuItem>\n        ))}\n      </Select>\n\n      {assigneeId &&\n      <div className={classNames.unassignBtn}>\n        <TextButton onClick={handleUnassignment}>Unassign</TextButton>\n      </div>\n      }\n    </div>\n  );\n}\n\n\nexport interface AssignableUsernameProps {\n  id: string\n}\nfunction AssignableUsername({ id }: AssignableUsernameProps) {\n  const user = hooks.useUser(id);\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <span>{user.username}</span>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}