{"ast":null,"code":"var _jsxFileName = \"/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/TaskCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { OptionsPopper } from '../components/options-popper';\nimport { hooks } from './store';\nimport TaskDetails from './TaskDetails';\nimport { useCardStyles } from './styles';\nexport default function TaskCard({\n  id,\n  dragHandleProps\n}) {\n  const classNames = useCardStyles();\n  const {\n    title,\n    assigneeId\n  } = hooks.useTask(id);\n  const assignee = hooks.useUser(assigneeId);\n  const deleteTask = hooks.useDeleteTask();\n\n  const handleClickDelete = () => {\n    if (deleteTask) {\n      deleteTask(id);\n    }\n  };\n\n  const {\n    0: isDetailsOpen,\n    1: setIsDetailsOpen\n  } = useState(false);\n\n  const openDetails = () => setIsDetailsOpen(true);\n\n  const closeDetails = () => setIsDetailsOpen(false);\n\n  return __jsx(Paper, _extends({\n    className: classNames.task\n  }, dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: classNames.taskHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classNames.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, title), assignee && __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Assigned to \", assignee.username)), __jsx(OptionsPopper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    onClick: openDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    primary: \"View & Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    onClick: handleClickDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    primary: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }))))), isDetailsOpen && __jsx(TaskDetails, {\n    id: id,\n    isOpen: isDetailsOpen,\n    close: closeDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jv/Desktop/MyDevelopment/github/repo-react/dnd/kanban/kanban-dashboard/src/dashboard/TaskCard.tsx"],"names":["React","useState","Typography","Paper","List","ListItem","ListItemText","OptionsPopper","hooks","TaskDetails","useCardStyles","TaskCard","id","dragHandleProps","classNames","title","assigneeId","useTask","assignee","useUser","deleteTask","useDeleteTask","handleClickDelete","isDetailsOpen","setIsDetailsOpen","openDetails","closeDetails","task","taskHeader","username"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAGA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,UAA9B;AASA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAlB,EAAkD;AAC/D,QAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBR,KAAK,CAACS,OAAN,CAAcL,EAAd,CAA9B;AACA,QAAMM,QAAQ,GAAGV,KAAK,CAACW,OAAN,CAAcH,UAAd,CAAjB;AACA,QAAMI,UAAU,GAAGZ,KAAK,CAACa,aAAN,EAAnB;;AACA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAIF,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACR,EAAD,CAAV;AACD;AACF,GAJD;;AAMA,QAAM;AAAA,OAACW,aAAD;AAAA,OAAgBC;AAAhB,MAAoCvB,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMwB,WAAW,GAAG,MAAMD,gBAAgB,CAAC,IAAD,CAA1C;;AACA,QAAME,YAAY,GAAG,MAAMF,gBAAgB,CAAC,KAAD,CAA3C;;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,UAAU,CAACa;AAA7B,KAAuCd,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,SAAS,EAAEC,UAAU,CAACc,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEd,UAAU,CAACC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,KAA1C,CADF,EAGGG,QAAQ,IACT,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA6CA,QAAQ,CAACW,QAAtD,CAJF,CADF,EASE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,EAAEJ,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,EAAEH,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CATF,CADF,EAsBGC,aAAa,IACd,MAAC,WAAD;AACE,IAAA,EAAE,EAAEX,EADN;AAEE,IAAA,MAAM,EAAEW,aAFV;AAGE,IAAA,KAAK,EAAEG,YAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF;AAgCD","sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { DraggableProvidedDragHandleProps } from 'react-beautiful-dnd';\n\nimport { OptionsPopper } from '../components/options-popper';\n\nimport { hooks } from './store';\nimport TaskDetails from './TaskDetails';\nimport { useCardStyles } from './styles';\n\n\nexport interface Props {\n  id: string,\n  statusId: string,\n  dragHandleProps: DraggableProvidedDragHandleProps\n}\n\nexport default function TaskCard({ id, dragHandleProps }: Props) {\n  const classNames = useCardStyles();\n  const { title, assigneeId } = hooks.useTask(id);\n  const assignee = hooks.useUser(assigneeId);\n  const deleteTask = hooks.useDeleteTask();\n  const handleClickDelete = () => {\n    if (deleteTask) {\n      deleteTask(id);\n    }\n  };\n\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n  const openDetails = () => setIsDetailsOpen(true);\n  const closeDetails = () => setIsDetailsOpen(false);\n\n  return (\n    <Paper className={classNames.task} {...dragHandleProps}>\n      <div className={classNames.taskHeader}>\n        <div>\n          <Typography className={classNames.title}>{title}</Typography>\n\n          {assignee &&\n          <Typography variant=\"subtitle2\">Assigned to {assignee.username}</Typography>\n          }\n        </div>\n\n        <OptionsPopper>\n          <List>\n            <ListItem button onClick={openDetails}>\n              <ListItemText primary=\"View & Edit\"/>\n            </ListItem>\n            <ListItem button onClick={handleClickDelete}>\n              <ListItemText primary=\"Delete\"/>\n            </ListItem>\n          </List>\n        </OptionsPopper>\n      </div>\n\n      {isDetailsOpen &&\n      <TaskDetails\n        id={id}\n        isOpen={isDetailsOpen}\n        close={closeDetails}\n      />\n      }\n    </Paper>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}